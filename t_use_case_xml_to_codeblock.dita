<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE task PUBLIC "-//OASIS//DTD DITA Task//EN" "task.dtd">
<task id="task_dbw_m2k_sv">
    <title>Importing XML Data to a <codeph>codeblock</codeph> Element</title>
    <shortdesc>XML code that shall be quoted in a DITA topic is much more comfortably written in an
        XML editor than directly in a <codeph>codeblock</codeph> element. If you want to quote large
        code snippets with a specific maximum line length, you can write the code in an external
        file and import the data with the script <filepath>import-xml-to-codeblock.xsl</filepath>
        to a <codeph>codeblock</codeph> element. The XSLT script <filepath>xml-serialize.xsl</filepath>
        serializes the XML code with line breaks and indentions while respecting your desired
        maximum line length.</shortdesc>
    <taskbody>
        <prereq>
            <ul id="ul_uvd_xwx_gv">
                <li>
                    <p>You saved the XML code that you want to import in an external file, for
                            example:<fig id="fig_whl_v1r_sv">
                            <image id="xml_to_codeblock_pre" href="images/xml_to_codeblock_pre.png"
                            />
                        </fig></p>
                </li>
                <li>
                    <p
                        conref="reusable_content/p_prereq_adjust_topic.dita#ReusableComponent_pt1_yrq_nw/p_qt1_yrq_nw"
                    />
                </li>
            </ul>
        </prereq>
        <context>
            <p>To import XML data to a <codeph>codeblock</codeph> element, complete the following
                steps:</p>
        </context>
        <steps id="steps_qt4_x5q_sv">
            <step>
                <cmd>Create a <codeph>codeblock</codeph> element in your DITA topic.</cmd>
            </step>
            <step>
                <cmd>Set the following attribute values on the <codeph>codeblock</codeph>
                    element:</cmd>
                <itemgroup>
                    <ul id="ul_slk_3fy_gv">
                        <li>
                            <p><codeph>xcr:xsl="import-xml-to-codeblock.xsl"</codeph></p>
                        </li>
                        <li>
                            <p><codeph>xcr:source="Data.xml"</codeph> for an XML file named
                                <filepath>Data.xml</filepath></p>
                        </li>
                        <li>
                            <p><codeph>xcrcp:maxWidth="45"</codeph> for a maximum line length of 45
                                characters</p>
                        </li>
                    </ul>
                </itemgroup>
            </step>
        </steps>
        <result>
            <p>The external XML code is inserted in the <codeph>codeblock</codeph> element. The
                maximum number of characters per line complies with the parameter
                    <codeph>maxWidth</codeph>, which is 45 in this example:<fig id="fig_lyh_b2r_sv">
                    <image id="xml_to_codeblock_post" href="images/xml_to_codeblock_post.png"/>
                </fig></p>
            <note>The second <codeph>codeblock</codeph> element was inserted here to visualize the
                line length. It is <i>not</i> generated by the <keyword keyref="ComponentConref"
                />.</note>
            <p>If the number of characters in the text string
                    <codeph>&lt;opening-tag><i>content</i>&lt;closing-tag></codeph> exceeds the
                parameter <codeph>maxWidth</codeph>, the script <filepath>xml-serialize.xsl</filepath>
                starts a new line for the content and for the closing tag, respectively.</p>
        </result>
        <postreq>
            <draft-comment author="TiMe">The following information could be shifted to another
                topic.</draft-comment>
            <p>This use case does not use a specialized element defining the custom parameter
                    <codeph>maxWidth</codeph>. Even if the schema allows any attribute within the
                    <keyword keyref="ComponentConref"/> namespace for custom parameters, you can
                only add the attribute in <uicontrol>Text</uicontrol> mode. Once the attribute is
                added, you can edit it in the <uicontrol>Attributes</uicontrol> view in Author
                mode.</p>
            <p>The indention in the target <codeph>codeblock</codeph> element is independent of the
                indention in the source XML file. The resulting indention is exclusively generated
                by the script <filepath>xml-serialize.xsl</filepath>. White spaces before and after
                textual content are ignored.</p>
            <p>The formatting by the script <filepath>xml-serialize.xsl</filepath> subjects to the
                following limitations:<ul id="ul_xgz_j5r_sv">
                    <li>
                        <p>Attributes are serialized, but not indented.</p>
                    </li>
                    <li>
                        <p>If the content between opening tag and closing tag is longer than the
                            maximum line length, the text is not split into multiple lines.</p>
                    </li>
                    <li>
                        <p>If an XML tag is longer than the maximum line length, the tag is not
                            split into multiple lines because this is not possible in XML.</p>
                    </li>
                </ul></p>
        </postreq>
    </taskbody>
</task>
